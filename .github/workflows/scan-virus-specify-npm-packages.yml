# $<Schema>$ https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
name: "Scan Virus - Specify NPM Packages"
on:
  workflow_dispatch:
    inputs:
      packages:
        description: "{string[]} NPM packages."
        required: true
      list_elements:
        description: "{(number | string)} List elements."
        required: false
        default: "none"
      list_elementshashes:
        description: "{boolean} List elements' hashes under itself."
        required: false
        default: "false"
      list_miscellaneousresults:
        description: "{(number | string)} List miscellaneous results."
        required: false
        default: "none"
      list_scanresults:
        description: "{(number | string)} List scan results."
        required: false
        default: "none"
jobs:
  parse-inputs:
    name: "(Parse Inputs)"
    runs-on: "ubuntu-latest"
    steps:
      - run: |
          [string[]]$NPMPackages = '${{github.event.inputs.packages}}'.Trim() -split '[ ,;]+'
          for ($Index = 0; $Index -lt $NPMPackages.Count; $Index++) {
            $NPMPackages[$Index] = $NPMPackages[$Index] -replace '^(?:https?:\/\/)?(?:www\.)?npmjs\.com\/package\/', ''
          }
          Write-Host -Object "::set-output name=matrix::{`"packages`":[`"$($NPMPackages -join '","')`"]}"
        id: "parser"
        shell: "pwsh"
    outputs:
      matrix: "${{steps.parser.outputs.matrix}}"
  scan-virus-specify-npm-packages:
    name: "${{matrix.packages}}"
    runs-on: "ubuntu-latest"
    needs:
      - "parse-inputs"
    strategy:
      fail-fast: false
      matrix: "${{fromJSON(needs.parse-inputs.outputs.matrix)}}"
    steps:
      - name: "Scan NPM Package ${{matrix.packages}}"
        uses: "hugoalh/scan-virus-ghaction@main"
        with:
          integrate: "npm:${{matrix.packages}}"
          list_elements: "${{github.event.inputs.list_elements}}"
          list_elementshashes: "${{github.event.inputs.list_elementshashes}}"
          list_miscellaneousresults: "${{github.event.inputs.list_miscellaneousresults}}"
          list_scanresults: "${{github.event.inputs.list_scanresults}}"
